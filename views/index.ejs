<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>DuniaMaps Demo</title>
    <link rel="stylesheet" href="/css/index.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
        integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
        integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
        crossorigin=""></script>
</head>

<body>
    <div class="wrapper">
        <div class="layout">
            <div class="sidebar">
                <br><br>
                <h4>Response</h4>
                <div id="distance"></div>
                <div id="instructions"></div>
            </div>
            <div id="map"></div>
        </div>
    </div>

    <script>
        let details = {
            coordinates: {
                lat: -1.2988071,
                lng: 36.8160473
            },
            url: 'https://www.duniamaps.com/tile/{z}/{x}/{y}.png',
            attribution: 'Map data & copy; <a href="https://duniamaps.com/">DuniaMaps</a>'
        }
        var mymap;

        buildMap(details.coordinates.lat, details.coordinates.lng)

        function buildMap(lat, lng) {
            mymap = L.map('map').setView([lat, lng], 15);// initialize map view

            L.tileLayer(details.url, {
                attribution: details.attribution,
                apikey: ''
            }).addTo(mymap);
        }

        fetch('/route')
        .then((resp) => resp.json())
            .then((data) => {
                routeDetails(data)
                console.log(data)
            })
            .catch((err) => {
                console.log(err)
            });

        function routeDetails(data){
            document.getElementById('distance').textContent = `Distance; ${data.paths[0].distance} meters; Estimated Time: ${convertTime(data.paths[0].time)} seconds`
            
            let instructions = document.getElementById('instructions')

            data.paths[0].instructions.forEach(element => {
                instructions.innerHTML += `<h4> ${element.text} for ${ convertTime(element.time) } seconds </h4>`
            });

            var myLines = {
                "type": "LineString",
                "coordinates": data.paths[0].points.coordinates
            }

            var myLayer = L.geoJSON().addTo(mymap);
            myLayer.addData(myLines);

            L.marker([-1.297948, 36.816498]).addTo(mymap);
            L.marker([-1.282815, 36.810314]).addTo(mymap);
        }  
        
        function convertTime(secs){
            return secs;
        }

    </script>

</body>

</html>